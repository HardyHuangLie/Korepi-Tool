<Window x:Class="Korepi_Tool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Korepi_Tool"
        xmlns:gifa="http://wpfanimatedgif.codeplex.com"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowStyle="None" ResizeMode="CanMinimize" AllowsTransparency="True" Background="{x:Null}" WindowStartupLocation="CenterScreen" FontFamily="Segoe UI" SnapsToDevicePixels="True" MouseLeftButtonDown="Window_MouseLeftButtonDown">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Name="solidColorBrush" x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#19000000"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#4C000000"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="10,10,10,10">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFB7B7B7"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FF7B7B7B"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="15,15,15,15">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="Close">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="2.227"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="2.227"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="2.37"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="2.37"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="201"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="201"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="40.5"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="40.5"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Msg">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01.9000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:02.2000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:02.3000000" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.OpacityMask).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="00:00:00" Value="#00000000"/>
                <EasingColorKeyFrame KeyTime="00:00:00.3000000" Value="Black"/>
                <EasingColorKeyFrame KeyTime="00:00:01.9000000" Value="#FF000000"/>
                <EasingColorKeyFrame KeyTime="00:00:02.2000000" Value="#00000000"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Grid>
        <Rectangle Stroke="Black" StrokeThickness="0" RadiusX="10" RadiusY="10" Fill="White"/>
        <Grid VerticalAlignment="Top" Height="50">
            <Button x:Name="Close" Style="{DynamicResource ButtonStyle1}" Content="&#xE8BB;" Width="35" Background="{x:Null}" BorderThickness="0,0,0,0" FontFamily="{DynamicResource Icons}" FontSize="18" FontWeight="ExtraBold" Click="Close_Click" Height="35" HorizontalAlignment="Right" Margin="0,0,11,0"/>
            <Button x:Name="Mine" Style="{DynamicResource ButtonStyle1}" Content="&#xE921;" HorizontalAlignment="Right" Width="35" Background="{x:Null}" BorderThickness="0,0,0,0" Height="35" FontFamily="{DynamicResource Icons}" FontSize="22" Margin="0,0,55,0" FontWeight="UltraBold" Click="Mine_Click"/>
            <Button x:Name="Setting" Style="{DynamicResource ButtonStyle1}" Content="&#xe713;" HorizontalAlignment="Left" Width="35" Background="{x:Null}" BorderThickness="0,0,0,0" Height="35" FontFamily="{DynamicResource Icons}" FontSize="24" Margin="668,0,0,0" FontWeight="DemiBold" Click="Setting_Click"/>
            <TextBlock HorizontalAlignment="Left" Margin="29,12,0,6" TextWrapping="Wrap" Text="Korepi Tool" FontSize="26" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI">
                <TextBlock.Foreground>
                    <RadialGradientBrush>
                        <GradientStop Color="#FF4200FF"/>
                        <GradientStop Color="#FFE600FF" Offset="1"/>
                        <GradientStop Color="#FFE600FF" Offset="0.361"/>
                    </RadialGradientBrush>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
        <Button x:Name="Start" Style="{DynamicResource ButtonStyle2}" HorizontalAlignment="Left" Height="65" Margin="488,321,0,0" VerticalAlignment="Top" Width="189" BorderThickness="0,0,0,0" FontSize="24" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" Click="Start_Click">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock x:Name="btnIconClose" Text="&#xef2c;" FontSize="28" Margin="5,5,-35,5" FontFamily="{DynamicResource Icons}" Foreground="Red" VerticalAlignment="Center" Visibility="Hidden"/>
                <TextBlock x:Name="btnIcon" Text="&#xe768;" FontSize="28" Margin="5" FontFamily="{DynamicResource Icons}" Foreground="#FF00B735" VerticalAlignment="Center"/>
                <TextBlock x:Name="btnText" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" Text="{DynamicResource StartGame}"/>
            </StackPanel>
        </Button>
        <Rectangle HorizontalAlignment="Left" Height="200" Margin="400,70,0,0" VerticalAlignment="Top" Width="364" StrokeThickness="0" RadiusX="18.656" RadiusY="18.656" Fill="#0C000000">
        </Rectangle>
        <Grid HorizontalAlignment="Left" Height="200" Margin="400,70,0,0" VerticalAlignment="Top" Width="364">
            <Grid VerticalAlignment="Top" Margin="0,120,0,0">
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{DynamicResource InjectDelete}" VerticalAlignment="Center" FontSize="18" FontWeight="Bold" Margin="234,0,0,0" Height="24" TextAlignment="Center" Width="129"/>
                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{DynamicResource GameStata}" VerticalAlignment="Center" FontSize="18" FontWeight="Bold" Width="115" Height="24" TextAlignment="Center"/>
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{DynamicResource GameProtect}" VerticalAlignment="Center" FontSize="18" FontWeight="Bold" Height="24" Width="124" TextAlignment="Center"/>
            </Grid>
            <Grid Margin="0,150,0,0" VerticalAlignment="Top">
                <TextBlock x:Name="GameStata" HorizontalAlignment="Center" TextWrapping="Wrap" Text="{DynamicResource IsNotOpen}" VerticalAlignment="Top" FontSize="18" Foreground="Red" FontWeight="Bold"/>
                <TextBlock x:Name="DelayTime" HorizontalAlignment="Left" Margin="258,0,0,0" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="18" Text="11111ms" FontWeight="Bold"/>
                <TextBlock x:Name="GameProtect" HorizontalAlignment="Left" Margin="34,0,0,0" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="18" FontWeight="Bold" Foreground="{x:Null}" Text="已啟用"/>
            </Grid>
        </Grid>
        <Rectangle HorizontalAlignment="Left" Height="89" Margin="30,312,0,0" VerticalAlignment="Top" Width="331" StrokeThickness="0" RadiusX="18.656" RadiusY="18.656" Fill="#0C000000"/>
        <Border x:Name="border" Margin="0,12,133,0" CornerRadius="10,10,10,10" BorderBrush="Black" BorderThickness="1,1,1,1" OpacityMask="Black" Height="30" Width="{Binding ActualWidth, ElementName=textBlock, Mode=OneWay}" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Hidden">
            <TextBlock x:Name="textBlock" Text="{DynamicResource SettingMsg}" FontSize="16" TextAlignment="Center" Padding="10,3,10,3"/>
        </Border>
        <Button x:Name="Link_Korpi" Margin="135,326,605,64" Style="{DynamicResource ButtonStyle1}" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" Height="60" Width="60" Click="Link_Korpi_Click">
            <Border Height="50" Width="50">
                <Border.Background>
                    <ImageBrush RenderOptions.BitmapScalingMode="HighQuality" ImageSource="/Image/Korpi.png"/>
                </Border.Background>
            </Border>
        </Button>
        <Image x:Name="GIF" HorizontalAlignment="Left" Margin="422,118,0,0" VerticalAlignment="Top" gifa:ImageBehavior.AnimatedSource ="/Image/Korpi.gif" Width="320">
            <Image.Clip>
                <RectangleGeometry RadiusX="10" RadiusY="10" Rect="0,0,320,41.025641025641"/>
            </Image.Clip>
        </Image>
        <Button x:Name="Link" Margin="58,326,680,64" Style="{DynamicResource ButtonStyle1}" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" Height="60" Width="60" Click="Link_Click">
            <Border x:Name="Githun_link" Height="50" Width="50">
                <Border.Background>
                    <ImageBrush RenderOptions.BitmapScalingMode="HighQuality" ImageSource="/Image/Octicons-mark-github.svg.png"/>
                </Border.Background>
            </Border>
        </Button>
        <Image RenderOptions.BitmapScalingMode="HighQuality" x:Name="image" HorizontalAlignment="Left" Margin="30,75,0,0" VerticalAlignment="Top" Source="/Image/Picture1.jpg" Height="197" Width="347" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Frame x:Name="frame" NavigationUIVisibility="Hidden" Navigated="frame_Navigated" Loaded="frame_Loaded" d:IsHidden="True"/>
    </Grid>
</Window>
